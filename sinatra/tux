We'll cover tux, a Ruby gem, that you can use to make sure your database and AR associations are set up properly.
Tux is an incredible Ruby gem that lets you access your database and perform all CRUD operations on it through the terminal. It also loads a full environment in the console that allows you to see all routes and views. Primarily, you'll use Tux to make sure your database is set up properly, play around with Ruby objects, and make sure your AR associations work properly.
For example, in this repo there is a simple Sinatra app with a User model and a method called say_name. I want to test that the say_name method works. Wouldn't it be great if we could enter into some sort of playground enviro where we can test out our code? IRB was for that, but Tux lets us easily create objects and test our methods to manipulate those objects.
Treat it like a controller.
user = User.new
user.name = "Beth"
user.email = "beth@beth.com"
user.saves
user.delete
user = User.first
